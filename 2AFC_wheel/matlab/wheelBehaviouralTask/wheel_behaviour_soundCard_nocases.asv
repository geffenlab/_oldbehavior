% Behaviour task with wheel response
function wheel_behaviour_soundCard


InitializePsychSound(1);
fs=192000;
sc = PsychPortAudio('Open', [], 1, 3, fs, 2); %'Open' [, deviceid][, mode][, reqlatencyclass][, freq][, channels]
s=setupSerial('COM5'); % windows

% Initialise variables:
trialNumber = 0;
newTrial = 1;
KbName('UnifyKeyNames');

%% LOAD SOUND STIMULI AND TELL ARDUINO TRIAL TYPE

tt = [];
cnt = 0;
flag = 0;
while ~flag
    out = serialRead(p);
    
    fprintf(fid,'%s',out);
    fprintf('%s',out);
    
    if strcmp(out,'start')
        
    if newTrial==1
        %   send new stimulus to sound card
        correctionTrial=0;
        trialType = 1;
    else
        %   continue with same sound
        correctionTrial=1;
        trialType = 1;
    end
    
    % Increase trial number
    trialNumber=trialNumber+1;
    disp(['Trial: ' num2str(trialNumber)]);

    % send trial type to arduino
    fprintf(s,'%s',trialType); % 1=left 2=right
    
    % Check it was received
    arduinoChat=s.bytesAvailable;
    while arduinoChat==0
        arduinoChat=s.bytesAvailable;
    end
    
    %         fscanf(s,'%s')
    disp(['Trial type received: ' fscanf(s,'%s')])
    
    elseif strcmp(out,'mouseStill')
    %% WAIT FOR MOUSE TO STOP MOVING WHEEL
    % wait for one second for the mouse to keep the wheel still...
    
    % Wait for arduino to send data
    arduinoChat=s.bytesAvailable;
    while arduinoChat==0
        arduinoChat=s.bytesAvailable;
    end
    mouseStillTime = serialRead(p);
    disp(['mouse still for 1 second: ' num2str(mouseStillTime)])
    
    %% PRESENT THE SOUND AND RECEIVE SOUND OFFSET
    
    % PRESENT SOUND HERE
    outputSignal1 = [rand(fs*3,1)/10; zeros(50,1)]';
    outputSignal2 = [ones(fs*3,1)*3; zeros(50,1)]';
    PsychPortAudio('FillBuffer', sc, [outputSignal1;outputSignal2]);
    
    % Start presentation
    t1 = PsychPortAudio('Start', sc, 1); % 'Start', pahandle [, repetitions=1] [, when=0] [, waitForStart=0]
    
    % Wait for arduino to send info
    arduinoChat=s.bytesAvailable;
    while arduinoChat==0
        arduinoChat=s.bytesAvailable;
    end
    soundOnset = fscanf(s,'%f');
    disp(['sound onset received: ' num2str(soundOnset)])
    
    
    arduinoChat=s.bytesAvailable;
    while arduinoChat==0
        arduinoChat=s.bytesAvailable;
    end
    soundOffset = fscanf(s,'%f');
    disp(['sound offset received: ' num2str(soundOffset)])
    disp(['Difference: ' num2str(soundOffset-soundOnset)])
    %         fscanf(s,'%s')
    
    %% RECEIVE INPUT FROM ARDUINO WITH RESPONSE TIME AND IF TRIAL CORRECT OR NOT
    
    
    arduinoChat=s.bytesAvailable;
    while arduinoChat==0
        arduinoChat=s.bytesAvailable;
    end
    % disp('received response time and outcome')
    responseTime = fscanf(s,'%f');
    responseOutcome = fscanf(s,'%f');
    disp(['Response time = ' num2str(responseTime)]);
    disp(['Correct? ' num2str(responseOutcome)]);
    
    if responseOutcome==1
        newTrial = 1;
    else
        newTrial = 0;
    end
    
    logWheelTrial_WL(trialNumber, correctionTrial, trialType, mouseStillTime,...
        soundOnset,soundOffset,responseTime,responseOutcome)
    
    % Exit statement
    [~,~,keyCode] = KbCheck;
    if sum(keyCode) == 1
        if strcmp(KbName(keyCode),'ESCAPE') || cnt > 10
            flag = 1;
        end
    end
end



